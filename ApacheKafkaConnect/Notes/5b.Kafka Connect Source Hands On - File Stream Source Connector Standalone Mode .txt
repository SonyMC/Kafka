Kafka Connect Source - FIle Stream Connector - Standalone Mode
--------------------------------------------------------------


- Goal:
	- Read a file and load the content directly into Kafka 
	- Run a connector in standalone mode ( useful for development)
	- Flow:
		file -> connector 1(Schema Disabled) -> Kafka Topic 1

Learning:
	- Uderstand how to configure a connector in standalone mode 
	- Get a first feel for Kafka Connect Standalone 







Starting Kafka Connect Cluster using Docker Compose
----------------------------------------------------

	- Ensure that Docker has atleast 4 GB of memory allocated :
settings.json
C:\Users\DELL\AppData\Roaming\Docker

You can also set the memory used by docker by editing the json file C:\Users\Personal\AppData\Roaming\Docker\settings.json . Look for a property called MemoryMiB and update its value to be the number of megabytes you want your docker installation to use



	- docker-compose.yml :
		- D:\OneDrive\Study\DevOps\Kafka\ApacheKafkaConnect\Code
	- Start Docker Desktop
	- Commands used:
		- Refer 'kafka-connect-tutorial-sources.sh' in D:\OneDrive\Study\DevOps\Kafka\ApacheKafkaConnect\Code
	- C:\Windows\System32\cmd.exe
	- Start our kafka cluster
		- cmd: docker-compose up kafka-cluster
	- Wait 2 minutes for the kafka cluster to be started	

	- Kafka cluster url: 
		- http://127.0.0.1:3030/
			- Will land you onto Kafka Development Environment UI
			- Ensure atealst 1 connector is running


Update Landoop container for viewing logs:
------------------------------------------
	- Start Docker desktop
	- cmd: docker pull landoop/fast-data-dev



Kafka connect UI
-----------------
- url : http://127.0.0.1:3030/
- View Logs: At bottom of Ui -> Browse -> Click on 'running services log files' -> click on 'connect-distributed.log'



Source files
-------------
Parent folder : D:\OneDrive\Study\DevOps\Kafka\ApacheKafkaConnect\Code\source

- Demo 1: 
	- D:\OneDrive\Study\DevOps\Kafka\ApacheKafkaConnect\Code\source\demo-1
		(1) worker.properties:
			- Configures a Kafka Connect Cluster Worker in StandAlone Mode
			- The file is commented and self expanatory

		(2) file-stream-demo-standalone.properties
			- Contains setup/configuration of the connector 
			- The file is commented and self expanatory

		(3) demo-file.txt:
			- Is the Input file Source
			



Commands executed:
----------------

Note: Use PowerShell to execute the followign :

-  kafka-connect-tutorial-sources.sh:
	- D:\OneDrive\Study\DevOps\Kafka\ApacheKafkaConnect\Code
	


- Start a hosted tools, mapped on our code in the present working direcotry
	- Mount the directory containing the Source files and open bash in the container:
		- D:\OneDrive\Study\DevOps\Kafka\ApacheKafkaConnect\Code

		- Open Powershell
			- cd into code direcotry:
				- cmd: cd D:\OneDrive\Study\DevOps\Kafka\ApacheKafkaConnect\Code
			- Bash into the container:
				- cmd: docker run --rm -it -v ${PWD}:/Code --net=host landoop/fast-data-dev:cp3.3.0 bash
					- Response: Bash terminal wil lopen 

			- List directories:
				- cmd: ls
Code  build.info  dev  extra-connect-jars  lib    mnt  proc  run   srv  tmp  var
bin   connectors  etc  home                media  opt  root  sbin  sys  usr

			- cd into 'Code' direcotry:
				- cmd: cd Code




			- cmd: cd source\demo-1

			- We launch the kafka connector in standalone mode:
				-  create the topic 'demo-1-standalone'  we write to with 3 partitions
					- cmd: kafka-topics --create --topic demo-1-standalone --partitions 3 --replication-factor 1 --zookeeper 127.0.0.1:2181
					- 	Response: Created topic "demo-1-standalone".
					- Verify:
						- Go to the Kafka CLuster UI : http://127.0.0.1:3030/
							-Topics :
								- You should be able to see teh newly created topic 'demo-1-standalone'
								- Click on the topic:
									- Data = Topic is empty
										 

			- Create a standalone connector as follows

				- Usage is connect-standalone worker.properties connector1.properties [connector2.properties connector3.properties]
					- cmd: connect-standalone worker.properties file-stream-demo-standalone.properties
						- Response: after a lot of log entries in the terminal you should finally see somethign like:
 							INFO Created connector file-stream-demo-standalone (org.apache.kafka.connect.cli.ConnectStandalone:91)
 							INFO Source task WorkerSourceTask{id=file-stream-demo-standalone-0} finished initialization and start (org.apache.kafka.connect.runtime.WorkerSourceTask:143)
					

				- The connector will take input from the 'demo-file.txt' file which is currently emppty and put it into teh topic ''demo-1-standalone''

			- Write some data to the demo-file.txt
							- Note: Hit 'return/entry' after each line to signify new data
							- Go to the Kafka CLuster UI : http://127.0.0.1:3030/
							-Topics :
								- Click on topic 'demo-1-standalone'
									- Click on the topic:
										- You shouldsee the entered data

			- Stop the connector:
					- ctrl + c
			- Go to the directory:
				- D:\OneDrive\Study\DevOps\Kafka\ApacheKafkaConnect\Code\source\demo-1
					- standalone.offsets:
						- You will see a new file that has been auto genrated called'standalone.offsets'	
						- We had defined thsi filenmae in worker.properties

			- Now restart the connector:
					- cmd: connect-standalone worker.properties file-stream-demo-standalone.properties
			- You will observe that on restart :
					- The 'demo-file.txt' is not read again form the beginning( can be verified by refreshing the topic in th eUI)
					- This is because The KAfka Connect Cluster reads the latest offset from the 'standalone.offsets' file							
		
			- Shut down the terminal when you're done.
###############